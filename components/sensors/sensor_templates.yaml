- platform: template
  sensors:
    sensor_count:
      friendly_name: 'Number of Sensors'
      value_template: >
        {%- set domains = ['sensor'] -%}
        {%- for domain in domains -%}
          {%- for item in states[domain] -%}
            {% if loop.first %}
              {{loop.length}}
            {% endif %}
          {%- endfor -%}
        {%- endfor -%}
    lights_count:
      friendly_name: 'Number of Lights'
      value_template: >
        {%- set domains = ['light'] -%}
        {%- for domain in domains -%}
          {%- for item in states[domain] -%}
            {% if loop.first %}
              {{loop.length}}
            {% endif %}
          {%- endfor -%}
        {%- endfor -%}
    main_shade_position:
      friendly_name: Main Shade Position
      icon_template: mdi:blinds
      value_template: >
        {% if states.sensor.shade_positions.attributes.shadeData[1].positions.position1 == 65535 %}
          Open
        {% elif states.sensor.shade_positions.attributes.shadeData[1].positions.position1 == 0 %}
          Closed
        {% else %}
          {{ ((1 - (states.sensor.shade_positions.attributes.shadeData[1].positions.position1 / 65535)) * 100) | round(0) }}%
        {% endif %}
    kitchen_shade_position:
      friendly_name: Kitchen Shade Position
      icon_template: mdi:blinds
      value_template: >
        {% if states.sensor.shade_positions.attributes.shadeData[0].positions.position1 == 65535 %}
          Open
        {% elif states.sensor.shade_positions.attributes.shadeData[0].positions.position1 == 0 %}
          Closed
        {% else %}
          {{ ((1 - (states.sensor.shade_positions.attributes.shadeData[0].positions.position1 / 65535)) * 100) | round(0) }}%
        {% endif %}
    wind_speed_knots:
      friendly_name: Wind Speed
      icon_template: mdi:weather-windy
      unit_of_measurement: knots
      value_template: >
        {% set result = float(states("sensor.owm_wind_speed")) * 1.94384 %}
        {{ result | round() }}
    github_stargazers:
      friendly_name: HomeAssistant Stars
      icon_template: mdi:github-circle
      value_template: >
        {{ state_attr("sensor.homeassistant", "stargazers") }}
    closet_motion_sensor_battery:
      friendly_name: "Closet Motion Sensor Battery"
      unit_of_measurement: "%"
      value_template: >
        {{ state_attr("binary_sensor.closet_sensor_motion", "battery_level") }}
      icon_template: >-
        {%- if is_state("states.binary_sensor.closet_sensor_motion.attributes.battery_level", "unknown") %}
          mdi:battery-unknown
        {% elif state_attr("binary_sensor.closet_sensor_motion", "battery_level") | float <= 5 %}
          mdi:battery-outline
        {% elif state_attr("binary_sensor.closet_sensor_motion", "battery_level") | float >= 95 %}
          mdi:battery
        {% else %}
          mdi:battery-{{state_attr("binary_sensor.closet_sensor_motion", "battery_level") | float / 10 | round * 10}}
        {%- endif %}
    laundry_motion_sensor_battery:
      friendly_name: "Laundry Motion Sensor Battery"
      unit_of_measurement: "%"
      value_template: >
        {{ state_attr("binary_sensor.laundry_room_sensor_motion", "battery_level") }}
      icon_template: >-
        {%- if is_state("states.binary_sensor.laundry_room_sensor_motion.attributes.battery_level", "unknown") %}
          mdi:battery-unknown
        {% elif state_attr("binary_sensor.laundry_room_sensor_motion", "battery_level") | float <= 5 %}
          mdi:battery-outline
        {% elif state_attr("binary_sensor.laundry_room_sensor_motion", "battery_level") | float >= 95 %}
          mdi:battery
        {% else %}
          mdi:battery-{{state_attr("binary_sensor.laundry_room_sensor_motion", "battery_level") | float / 10 | round * 10}}
        {%- endif %}
    utility_motion_sensor_battery:
      friendly_name: "Utility Room Motion Sensor Battery"
      unit_of_measurement: "%"
      value_template: >
        {{ state_attr("binary_sensor.utility_room_sensor_motion", "battery_level") }}
      icon_template: >-
        {%- if is_state("states.binary_sensor.utility_room_sensor_motion.attributes.battery_level", "unknown") %}
          mdi:battery-unknown
        {% elif state_attr("binary_sensor.utility_room_sensor_motion", "battery_level") | float <= 5 %}
          mdi:battery-outline
        {% elif state_attr("binary_sensor.utility_room_sensor_motion", "battery_level") | float >= 95 %}
          mdi:battery
        {% else %}
          mdi:battery-{{state_attr("binary_sensor.utility_room_sensor_motion", "battery_level") | float / 10 | round * 10}}
        {%- endif %}
    bathroom_motion_sensor_battery:
      friendly_name: "Bathroom Motion Sensor Battery"
      unit_of_measurement: "%"
      value_template: >
        {{ state_attr("binary_sensor.bathroom_sensor_motion", "battery_level") }}
      icon_template: >-
        {%- if is_state("states.binary_sensor.utility_room_sensor_motion.attributes.battery_level", "unknown") %}
          mdi:battery-unknown
        {% elif state_attr("binary_sensor.utility_room_sensor_motion", "battery_level") | float <= 5 %}
          mdi:battery-outline
        {% elif state_attr("binary_sensor.utility_room_sensor_motion", "battery_level") | float >= 95 %}
          mdi:battery
        {% else %}
          mdi:battery-{{state_attr("binary_sensor.utility_room_sensor_motion", "battery_level") | float / 10 | round * 10}}
        {%- endif %}
##############################################
#                                            #
#               Vacuum                       #
#                                            #
##############################################
    vacuum_status:
      friendly_name: "Status"
      value_template: 'Status: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.status }}'
      icon_template: >
          {% set val =  states.vacuum.xiaomi_vacuum_cleaner.attributes.status  %}
          {% if val == 'Charging' %}
            mdi:battery-charging
          {% elif val == 'Cleaning' %}
            mdi:move-resize
          {% elif val == 'Returning home' %}
            mdi:keyboard-return
          {% elif val == 'Idle' %}
            mdi:dots-horizontal
          {% elif val == 'Paused' %}
            mdi:pause-circle
          {% else %}
            mdi:help-circle
          {% endif %}
    vacuum_fan_speed:
      friendly_name: Fan Speed
      value_template: 'Mode: {{ state_attr("vacuum.xiaomi_vacuum_cleaner", "fan_speed") }}'
      icon_template: 'mdi:speedometer'
    vacuum_battery:
      friendly_name: Vacuum Battery
      value_template: 'Battery: {{ state_attr("vacuum.xiaomi_vacuum_cleaner", "battery_level") }}'
      unit_of_measurement: '%'
      icon_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.battery_icon }}'
    vacuum_cleaning_time:
      friendly_name: Time of Last Cycle
      unit_of_measurement: "min"
      value_template: '{{ state_attr("vacuum.xiaomi_vacuum_cleaner", "cleaning_time") }}'
      icon_template: 'mdi:timer'
    vacuum_cleaning_count:
      friendly_name: Total Cleaning Count
      value_template: '{{ state_attr("vacuum.xiaomi_vacuum_cleaner", "cleaning_count") }}'
    vacuum_cleaned_area:
      friendly_name: Area of Last Cycle
      unit_of_measurement: 'sq ft'
      value_template: >
        {% set result = float(state_attr("vacuum.xiaomi_vacuum_cleaner", "cleaned_area")) * 10.76391 %}
        {{ result | round() }}
      icon_template: 'mdi:ruler'
    vacuum_cleanmainbrush:
      friendly_name: Replace main brush
      unit_of_measurement: 'h'
      value_template: 'Main Brush: {{ state_attr("vacuum.xiaomi_vacuum_cleaner", "main_brush_left") }}'
      icon_template: 'mdi:screwdriver'
    vacuum_cleansidebrush:
      friendly_name: Replace side brush
      unit_of_measurement: 'h'
      value_template: 'Side brush: {{ state_attr("vacuum.xiaomi_vacuum_cleaner", "side_brush_left") }}'
      icon_template: 'mdi:screwdriver'
    vacuum_cleanfilter:
      friendly_name: Replace filter
      unit_of_measurement: 'h'
      value_template: 'Filter: {{ state_attr("vacuum.xiaomi_vacuum_cleaner", "filter_left") }}'
      icon_template: 'mdi:screwdriver'
    vacuum_sensordirtyleft:
      friendly_name: Replace filter
      unit_of_measurement: 'h'
      value_template: 'Sensor: {{ state_attr("vacuum.xiaomi_vacuum_cleaner", "sensor_dirty_left") }}'
      icon_template: 'mdi:screwdriver'
    vacuum_last_cleaning_time:
      friendly_name: Date and Time of Last Clean
      value_template: >
        {{ set lastCleanDate = state_attr("vacuum.xiaomi_vacuum_cleaner", "clean_stop") }}
        {{ lastCleanDate }}